# Form implementation generated from reading ui file 'ISO-5167-2.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import math as m

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(752, 476)
        self.pushButton = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton.setGeometry(QtCore.QRect(90, 420, 75, 24))
        self.pushButton.setObjectName("pushButton")

        self.plainTextEdit = QtWidgets.QPlainTextEdit(parent=Dialog)
        self.plainTextEdit.setGeometry(QtCore.QRect(240, 20, 291, 71))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.label = QtWidgets.QLabel(parent=Dialog)
        self.label.setGeometry(QtCore.QRect(30, 117, 281, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=Dialog)
        self.label_2.setGeometry(QtCore.QRect(30, 147, 281, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=Dialog)
        self.label_3.setGeometry(QtCore.QRect(30, 178, 281, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=Dialog)
        self.label_4.setGeometry(QtCore.QRect(30, 210, 281, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(parent=Dialog)
        self.label_5.setGeometry(QtCore.QRect(30, 240, 281, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(parent=Dialog)
        self.label_6.setGeometry(QtCore.QRect(30, 270, 281, 16))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(parent=Dialog)
        self.label_7.setGeometry(QtCore.QRect(30, 301, 281, 16))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=Dialog)
        self.label_8.setGeometry(QtCore.QRect(30, 332, 281, 16))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=Dialog)
        self.label_9.setGeometry(QtCore.QRect(30, 364, 281, 16))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(parent=Dialog)
        self.label_10.setGeometry(QtCore.QRect(30, 390, 281, 16))
        self.label_10.setObjectName("label_10")
        self.lineEdit = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(310, 114, 113, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_2.setGeometry(QtCore.QRect(310, 145, 113, 22))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_3.setGeometry(QtCore.QRect(310, 175, 113, 22))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_4.setGeometry(QtCore.QRect(310, 206, 113, 22))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_5.setGeometry(QtCore.QRect(310, 237, 113, 22))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_6.setGeometry(QtCore.QRect(310, 267, 113, 22))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_7 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_7.setGeometry(QtCore.QRect(310, 298, 113, 22))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_8 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_8.setGeometry(QtCore.QRect(310, 329, 113, 22))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_9 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_9.setGeometry(QtCore.QRect(310, 360, 113, 22))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.lineEdit_10 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_10.setGeometry(QtCore.QRect(310, 387, 113, 22))
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.label_11 = QtWidgets.QLabel(parent=Dialog)
        self.label_11.setGeometry(QtCore.QRect(460, 120, 121, 16))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=Dialog)
        self.label_12.setGeometry(QtCore.QRect(460, 150, 121, 16))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(parent=Dialog)
        self.label_13.setGeometry(QtCore.QRect(460, 210, 121, 16))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(parent=Dialog)
        self.label_14.setGeometry(QtCore.QRect(522, 180, 121, 16))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(parent=Dialog)
        self.label_15.setGeometry(QtCore.QRect(460, 244, 121, 16))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(parent=Dialog)
        self.label_16.setGeometry(QtCore.QRect(460, 274, 121, 16))
        self.label_16.setObjectName("label_16")
        self.lineEdit_11 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_11.setGeometry(QtCore.QRect(600, 117, 113, 22))
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.lineEdit_12 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_12.setGeometry(QtCore.QRect(600, 147, 113, 22))
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.lineEdit_13 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_13.setGeometry(QtCore.QRect(600, 207, 113, 22))
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.lineEdit_14 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_14.setGeometry(QtCore.QRect(600, 240, 113, 22))
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.lineEdit_15 = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit_15.setGeometry(QtCore.QRect(600, 271, 113, 22))
        self.lineEdit_15.setObjectName("lineEdit_15")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "Calculate !"))
        self.plainTextEdit.setPlainText(_translate("Dialog", "This program is used to solve the orifice calculation problem as defined in ISO-5167:2-2003. This tool is used only for concentric square-edged orifice plate"))
        self.label.setText(_translate("Dialog", "Maximum gas flow at standard condition, Sm3/day"))
        self.label_2.setText(_translate("Dialog", "Normal gas flow at standard condition, Sm3/day"))
        self.label_3.setText(_translate("Dialog", "Dynamic viscosity at flow condition, cP"))
        self.label_4.setText(_translate("Dialog", "Molecular weight of gas mixture, kg/kmol"))
        self.label_5.setText(_translate("Dialog", "Isentropic Exponent (or Cp/Cv)"))
        self.label_6.setText(_translate("Dialog", "Differential pressure range, mbar"))
        self.label_7.setText(_translate("Dialog", "Meter inlet pressure, barg"))
        self.label_8.setText(_translate("Dialog", "Meter Inlet temperature, degC"))
        self.label_9.setText(_translate("Dialog", "Gas density at reference condition, kg/m3"))
        self.label_10.setText(_translate("Dialog", "Pipe ID, inch"))
        self.label_11.setText(_translate("Dialog", "Beta ratio"))
        self.label_12.setText(_translate("Dialog", "Orifice diameter, inch"))
        self.label_13.setText(_translate("Dialog", "Reynold number "))
        self.label_14.setText(_translate("Dialog", "At normal gas flowrate"))
        self.label_15.setText(_translate("Dialog", "Thermal Expansion"))
        self.label_16.setText(_translate("Dialog", "Discharge Coefficient"))

        self.pushButton.clicked.connect(self.Main_Calculation)

    def Main_Calculation(self):

        #Convert input from user to calculation parameters

        text1 = self.lineEdit.text().replace(",", ".")
        qV_std_max = float(text1)
        text2 = self.lineEdit_2.text().replace(",", ".")
        qV_std_norm = float(text2)
        text3 = self.lineEdit_3.text().replace(",", ".")
        mu_input = float(text3)
        text4 = self.lineEdit_4.text().replace(",", ".")
        M_input = float(text4)
        text5 = self.lineEdit_5.text().replace(",", ".")
        kappa = float(text5)
        text6 = self.lineEdit_6.text().replace(",", ".")
        delta_P_input = float(text6)
        text7 = self.lineEdit_7.text().replace(",", ".")
        P1_input = float(text7)
        text8 = self.lineEdit_8.text().replace(",", ".")
        T1_input = float(text8)
        text9 = self.lineEdit_9.text().replace(",", ".")
        density = float(text9)
        text10 = self.lineEdit_10.text().replace(",", ".")
        D_input = float(text10)

        #Declaration for standard pressure, temperature and additional constant for calculation

        P_std = 101325                       #Standard pressure in Pascal  
        T_std = 15 +273.15                   #Standard temperature in Kelvin
        R = 8.3144598                        #Constant Avogrado in SI system measurement
        #alpha = 15.9 * 1e-06

        #Unit conversion to SI system measurement and mass flowrate calculation

        alpha_D = 10.725e-6 + 8.171e-9 * T1_input - 1.671e-12 * m.pow(T1_input, 2) - 2.065e-15 * m.pow(T1_input, 3)
        alpha_d = 16.623e-6 + 6.307e-9 * T1_input - 5.940e-12 * m.pow(T1_input, 2) + 3.589e-15 * m.pow(T1_input, 3)
        P1 = P1_input * 100000 + 101325                 #Inlet pressure conversion to Pascal
        T1 = T1_input + 273.15                          #Inlet temperature conversion to Kelvin
        delta_P = delta_P_input * 100                   #Maximum differential pressure conversion to Pascal
        M = M_input / 1000                              #Molecular weight conversion to kg/mol
        D_mea = D_input * 25.4 / 1000                    #Pipe ID conversion to meter
        F_aD = 1 + alpha_D * (T1_input - 20)
        D_f = D_mea * F_aD                              #Temperature correction
        mu = mu_input / 1000                            #Dynamic viscosity conversion to Pa.s
        density_standard = P_std * M /(R * T_std)       #Calculation of natural gas density at standard condition
        qm = qV_std_max * density_standard / 86400      #Calculation of mass flow rate based on standard flow rate
 

        #Calculation of flange tapping parameters, invariant number and Reynold number for Pipe ID

        L1 = 0.0254 / D_f * F_aD                    #quotient of the distance of the upstream tapping from the upstream face of the plate and the pipe diameter
        L2 = 0.0254 / D_f * F_aD                    #quotient of the distance of the downstream tapping from the downstream face of the plate and the pipe diameter
        ReD_f = 4 * qm / (m.pi * mu * D_f)      #Calculation of Reynold number for Pipe ID
        A2 = mu * ReD_f / (D_f * m.sqrt(2 * delta_P * density))    #Calculation of invariant A2 for iteration process

        def discharge_coefficient (beta, ReD, A, L1, M2, D):
            C = 0.5961 + 0.0261 * m.pow(beta, 2) - 0.216 * m.pow(beta, 8) + 0.000521 * m.pow((1000000*beta/ReD), 0.7) + (0.0188 + 0.0063 * A) * m.pow(beta, 3.5) * m.pow((1000000/ReD), 0.3) + (0.043 + 0.080 * m.exp(-10 * L1) - 0.123 * m.exp(-7 * L1)) * (1 - 0.11 * A) * m.pow(beta, 4)/(1 - m.pow(beta, 4)) - 0.031 * (M2 - 0.8 * m.pow(M2, 1.1)) * m.pow(beta, 1.3)
            #if (D < 0.07112):
            #    C += 0.011 * (0.75 - beta) * (2.8 - D / 0.0254)
            return C

        #Function definition for expansion factor calculation

        def expansion_factor (beta, P1, delta_P, kappa):
            P2 = P1 - delta_P
            epsilon = 1 - (0.351 + 0.256 * m.pow(beta, 4) + 0.93 * m.pow(beta, 8)) * (1 - m.pow((P2/P1), (1/kappa)))
            return epsilon

        #Function for next beta iteration

        def func (C, epsilon, A2):
            next_beta = m.pow(1 + (C * epsilon / A2) ** 2, -0.25)
            return next_beta

        #Main iteration process for beta calculation
        beta_f = 0.3
        M2 = 2 * L2 / (1 - beta_f)
        A = m.pow((19000 * beta_f) / ReD_f, 0.8)
        C = discharge_coefficient(beta_f, ReD_f, A, L1, M2, D_f)
        epsilon = expansion_factor(beta_f, P1, delta_P, kappa)
        while m.fabs(beta_f - func(C, epsilon, A2)) > m.pow(10,-15):
            beta_f = func(C, epsilon, A2)
            M2 = 2 * L2 / (1 - beta_f)
            A = m.pow((19000 * beta_f) / ReD_f, 0.8)
            C = discharge_coefficient(beta_f, ReD_f, A, L1, M2, D_f)

        #Calculation output parameter

        d_f = D_f * beta_f
        t_PE = 0.125 * 25.4 / 1000
        E_PE = 30 * 1000000 * 101325 / 14.696
        F_ad = 1 + alpha_d * (T1_input - 20)
        A_param = D_f / (F_ad * t_PE)
        F_deltaP = m.pow((1 - delta_P / E_PE * ((0.135 * beta_f - 0.1555 * m.pow(beta_f, 2)) * m.pow(A_param, 3) + (1.06 * m.pow(beta_f, 1.3) - 1.17) * m.pow(A_param, 2))), -0.5)
        d_mea = d_f / (F_ad * F_deltaP)
        d_output = d_mea / 25.4 * 1000
        beta_output = d_mea / D_mea
        normal_ratio = qV_std_norm / qV_std_max
        delta_P_normal = delta_P * normal_ratio * normal_ratio
        ReD_normal = normal_ratio * ReD_f
        C_normal = discharge_coefficient(beta_f, ReD_normal, A, L1, M2, D_f)
        epsilon_normal = expansion_factor(beta_f, P1, delta_P_normal, kappa)

        #Export parameters to user GUI

        self.lineEdit_11.setText(str(round(beta_output, 6)))
        self.lineEdit_12.setText(str(round(d_output, 6)))
        self.lineEdit_13.setText(str(round(ReD_normal)))
        self.lineEdit_14.setText(str(round(C_normal, 6)))
        self.lineEdit_15.setText(str(round(epsilon_normal, 6)))

        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())




